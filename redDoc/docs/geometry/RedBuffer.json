[
  {
    "code": "PROPERTY",
    "title": "bufferType",
    "description": "bufferType 상수",
    "return": "RedBuffer.ARRAY_BUFFER or RedBuffer.ELEMENT_ARRAY_BUFFER"
  },
  {
    "code": "PROPERTY",
    "title": "data",
    "description": "버퍼 구성 데이터",
    "return": "TypedArray"
  },
  {
    "code": "METHOD",
    "title": "dispose",
    "description": "dispose",
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "drawMode",
    "description": "gl.STATIC_DRAW 상수",
    "return": "gl.STATIC_DRAW or gl.DYNAMIC_DRAW"
  },
  {
    "code": "PROPERTY",
    "title": "glArrayType",
    "description": "\n              입력된 데이터의 타입으로 판별한 gl.XXX 상수\n              ex) gl.FLOAT, gl.BYTE\n ",
    "return": "gl.XXX 상수"
  },
  {
    "code": "PROPERTY",
    "title": "glBufferType",
    "description": "\n    bufferType 에 대응하는 gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER 상수.\n    생성시 자동 판별되어 입력됨.\n          ",
    "return": "gl.ARRAY_BUFFER or glELEMENT_ARRAY_BUFFER 상수"
  },
  {
    "code": "PROPERTY",
    "title": "key",
    "description": "고유키",
    "return": "String"
  },
  {
    "constructorYn": true,
    "title": "RedBuffer",
    "description": "\n\t RedBuffer Instance 생성자\n ",
    "params": {
      "redGL": [
        {
          "type": "RedGL"
        }
      ],
      "key": [
        {
          "type": "String"
        },
        "고유키"
      ],
      "bufferType": [
        {
          "type": "String"
        },
        "RedBuffer.ARRAY_BUFFER or RedBuffer.ELEMENT_ARRAY_BUFFER"
      ],
      "data": [
        {
          "type": "TypedArray"
        },
        "버퍼 구성 데이터"
      ],
      "interleaveDefineInfoList": [
        {
          "type": "Object"
        },
        "\n\t\t 버퍼의 인터리브 구성 정보\n\t\t <b>RedBuffer.ARRAY_BUFFER</b> 일때만 필요\n\t\t ",
        "<code>\n\t\t [\n\t\t   RedInterleaveInfo('aVertexPosition', 3),\n\t\t   RedInterleaveInfo('aTexcoord', 2)\n\t\t ]\n\t\t </code>"
      ],
      "drawMode": [
        {
          "type": "gl 상수"
        },
        "ex) gl.STATIC_DRAW"
      ]
    },
    "demo": "../example/geometry/RedBuffer.html",
    "example": "\n          var canvas;\n          canvas = document.createElement('canvas');\n          document.body.appendChild(canvas);\n          RedGL(canvas, function (v) {\n              if (v) {\n                  var interleaveData, indexData; // 데이터 변수\n                  var tInterleaveBuffer, tIndexBuffer; // 버퍼 변수\n                  // 인터리브 데이터 생성\n                  interleaveData = new Float32Array([\n                      0.0, 0.5, 0.0, 0.0, 0.5,\n                      -0.5, -0.5, 0.0, 0.5, 0.5,\n                      0.5, -0.5, 0.0, 0.5, 0.0\n                  ]);\n                  // 인덱스 데이터 생성\n                  indexData = new Uint16Array([0, 1, 2]);\n                  // 인터리브 버퍼생성\n                  tInterleaveBuffer = RedBuffer(\n                      this, // RedGL Instance\n                      'tInterleaveBuffer', // key\n                      RedBuffer.ARRAY_BUFFER, // bufferType\n                      interleaveData, // data\n                      [\n                          RedInterleaveInfo('aVertexPosition', 3), // 프로그램에서 aVertexPosition 키를 사용하고 포인트당 3개로 구성됨\n                          RedInterleaveInfo('aTexcoord', 2)  // 프로그램에서 aTexcoord 키를 사용하고 포인트당 2개로 구성됨\n                      ]\n                  );\n                  // 인덱스 버퍼생성\n                  tIndexBuffer = RedBuffer(\n                      this, // RedGL Instance\n                      'tIndexBuffer', // key\n                      RedBuffer.ELEMENT_ARRAY_BUFFER, // bufferType\n                      indexData  // data\n                  );\n                  console.log('인터리브버퍼', tInterleaveBuffer);\n                  console.log('인덱스버퍼', tIndexBuffer);\n              } else {\n                  console.log('초기화 실패!')\n              }\n          });\n ",
    "return": "RedBuffer Instance"
  },
  {
    "code": "CONST",
    "title": "RedBuffer.ARRAY_BUFFER",
    "description": "ARRAY_BUFFER 버퍼상수 ",
    "return": "String"
  },
  {
    "code": "CONST",
    "title": "RedBuffer.ELEMENT_ARRAY_BUFFER",
    "description": "ELEMENT_ARRAY_BUFFER 버퍼상수",
    "return": "String"
  },
  {
    "code": "METHOD",
    "title": "upload",
    "description": "\n\t 버퍼 데이터 갱신\n\t 기존 버퍼의 타입과 다른 타입의 데이터가 들어 올 경우 에러.\n ",
    "params": {
      "data": [
        {
          "type": "TypedArray"
        },
        "갱신 할 데이터"
      ]
    },
    "example": "\n\t // ... interleaveData 정의 후 tInterleaveBuffer 버퍼를 가정하면\n\t // 아래와 같이 데이터를 변경하고 버퍼데이터를 업데이트 시킬수 있다.\n\t interleaveData[0] = Math.sin(time / 1000) * 1\n\t interleaveData[2] = Math.cos(time / 1000) * 2\n\t // 버퍼정보 업로드\n\t tInterleaveBuffer.upload(interleaveData)\n ",
    "return": "RedBuffer Instance"
  },
  {
    "code": "PROPERTY",
    "title": "webglBuffer",
    "description": "생성된 WebGLBuffer",
    "return": "WebGLBuffer Instance"
  }
]